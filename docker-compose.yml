services:
  rabbitmq:
    image: rabbitmq:3.12-management
    env_file:
      - .env
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_USER_PORT}:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
      image: redis:7-alpine
      ports:
        - "6379:6379"
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 3s
        retries: 5
  postgres:
    image: postgres:15
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: database
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  server:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./src/tests:/app/tests
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
  tester:
    image: python:3.9-slim
    env_file:
      - .env
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      server:
        condition: service_started
    command: [ "sh", "-c", "sleep 10 && pip install pytest requests && pytest src/tests/ -v" ]
volumes:
  postgres_data: